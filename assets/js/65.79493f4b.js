(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{366:function(e,r,t){"use strict";t.r(r);var n=t(0),v=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("ol",[t("li")]),e._v(" "),t("p",[e._v('打印九九乘法表，先创建一个9行的二维不规则数组，然后把乘法表的每一行存入该数组的对应行中，最后用循环语句读取数组的每一行并打印。\n提示：数组类型是String，数组的每个元素(下标从0开始)：a[i][j] = (i+1) + " * " + (j+1) + "=" + (i+1)*(j+1) + "\\t";'),t("br")]),e._v(" "),t("ol",{attrs:{start:"2"}},[t("li")]),e._v(" "),t("p",[e._v("编写一个Java程序，"),t("br"),e._v("\n创建一个二维不规则数组，数组的形状及大小要与如下的三角形数列相一致."),t("br"),e._v("\n首先把三角形数列的每行元素按照顺序依次存入二维不规则数组的对应行中,"),t("br"),e._v("\n然后再逐一的访问二维不规则数组中的每个元素并相加求和，最后输出求和结果."),t("br"),e._v("\n1"),t("br"),e._v("\n1 2"),t("br"),e._v("\n1 2 3"),t("br"),e._v("\n. . ."),t("br"),e._v("\n1 2 3 ... 100")]),e._v(" "),t("ol",{attrs:{start:"3"}},[t("li")]),e._v(" "),t("p",[e._v("编写一个Java程序，除了主类TestGeometry外，该程序还有一个Shape接口、一个Rectangle类和一个Circle类。要求：  "),t("br"),e._v("\n(1)Shape接口有两个抽象方法："),t("br"),e._v("\npublic abstract double computeArea()，用于计算面积；"),t("br"),e._v("\npublic abstract double computeLength()，用于计算周长。"),t("br"),e._v("\n(2)Rectangle类实现Shape接口，实现Shape接口计算面积和周长的方法，并打印输出面积和周长，"),t("br"),e._v("\n格式为：矩形的面积 = xxx;  矩形的周长 = xxx。"),t("br"),e._v("\n有两个私有成员变量分别保存矩形的长和宽，一个构造方法用于初始化这两个成员变量。"),t("br"),e._v("\n(3)Circle类实现Shape接口，实现计算圆的面积和周长的方法，并打印输出面积和周长，"),t("br"),e._v("\n格式为：圆的面积 = xxx;    圆的周长 = xxx。"),t("br"),e._v("\n有一个私有成员变量用于保存圆的半径，一个构造方法用于初始化这个成员变量。"),t("br"),e._v("\n圆周率PI = 3.142定义为常量。"),t("br"),e._v("\n(4) TestGeometry类中定义实例方法double computeArea(Shape s)和double computeLength(Shape s)，"),t("br"),e._v("\n这两个方法通过接口回调分别计算实现类对象的面积和周长。"),t("br"),e._v("\n在TestGeometry类的main方法中从键盘输入矩形的长和宽以及圆的半径，"),t("br"),e._v("\n分别创建Rectangle类和Circle类的对象，"),t("br"),e._v("\n调用TestGeometry类的实例方法computeArea(Shape s)和 computeLength(Shape s)计算面积和周长。")]),e._v(" "),t("ol",{attrs:{start:"4"}},[t("li")]),e._v(" "),t("p",[e._v("(1)定义一个People类，有姓名(String name)和年龄(int age)两个private属性，"),t("br"),e._v("\n有4个set及get方法："),t("br"),e._v("\nsetName()方法设置姓名，setAge()方法设置年龄，"),t("br"),e._v("\ngetName()方法获取姓名，getAge()方法获取年龄，"),t("br"),e._v("\n要求姓名和年龄的设置与获取必须通过set和get方法，不管是在People类内部还是外部。"),t("br"),e._v("\n有一个print()方法打印输出姓名和年龄，"),t("br"),e._v("\n格式为：“name = xxx; age = xxx;”。"),t("br"),e._v("\n(2)定义People的子类Student，新增private的学号属性(String id)，"),t("br"),e._v("\n通过构造方法设置学号属性，而必须通过getId()方法获取学号属性。"),t("br"),e._v("\n在类Student中重写父类的print()方法来打印输出学生的姓名、年龄、学号，"),t("br"),e._v("\n在该方法中不要读取姓名和年龄属性，学号属性的显示格式为：“id = xxx;”。"),t("br"),e._v("\n(3)在类Student的main方法中创建一个Student对象，让这个对象上转型并自己设定对象的所有属性，"),t("br"),e._v("\n然后调用上转型对象的print()方法打印输出对象的姓名、年龄、学号。")]),e._v(" "),t("ol",{attrs:{start:"5"}},[t("li")]),e._v(" "),t("p",[e._v("学生有学号、姓名、年龄三个属性，学号和姓名用字符串表示，年龄用整数值表示。"),t("br"),e._v("\n定义一个类Key作为键类，该类包含一个字符串成员变量存储学号；"),t("br"),e._v("\n定义一个类Student作为值类，该类包含一个int型成员变量保存年龄，一个字符串成员变量保存姓名。\n将学号从“001”到“015”的学生以学号乱序的方式存入一个TreeMap集合中，"),t("br"),e._v("\nKey对象作为键，Student对象作为值，然后按照学号从大到小的顺序将集合中的元素逐一的打印输出。\n分别用两种方式实现建的大小比较："),t("br"),e._v("\n(1)实现Comparable接口；"),t("br"),e._v("\n(2)实现自定义比较器Comparator。"),t("br"),e._v("\n要求：使用泛型版的TreeMap集合。"),t("br"),e._v("\n注意，学号“001”小于学号“002”，需要先将学号转换成整数值，然后再比较大小。")]),e._v(" "),t("ol",{attrs:{start:"6"}},[t("li")]),e._v(" "),t("p",[e._v("定义工人类Worker，该类有工号(String id)和姓名(String name)两个属性，"),t("br"),e._v("\n定义一个构造方法Worker(String id, String name)，通过这个构造方法设定两个属性的值。"),t("br"),e._v("\n这两个属性组成的字符串id+name唯一标识一个工人对象，"),t("br"),e._v("\n也就是id+name相等的Worker对象认为是相同的对象。"),t("br"),e._v("\n在测试类Test的main方法中创建一个HashSet集合，创建5个Worker对象添加到HashSet集合中，"),t("br"),e._v("\n自己设定每个对象的属性值，其中必须有两个对象是重复的，"),t("br"),e._v("\n要求HashSet集合能判断出相同的对象，从而在集合中避免存入重复的元素，"),t("br"),e._v("\n因此要重写Worker的hashCode()方法和equals()方法。"),t("br"),e._v("\n另外，重写Worker类的toString()方法，该方法返回两个属性组合成的字符串id + name，"),t("br"),e._v("\n用以打印输出对象的内容。最后遍历并打印输出HashSet集合中的每个元素。")])])}),[],!1,null,null,null);r.default=v.exports}}]);