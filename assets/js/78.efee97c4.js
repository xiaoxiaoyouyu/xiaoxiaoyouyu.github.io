(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{379:function(t,i,a){"use strict";a.r(i);var v=a(0),_=Object(v.a)({},(function(){var t=this,i=t.$createElement,a=t._self._c||i;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"实验名称-控制器实验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实验名称-控制器实验"}},[t._v("#")]),t._v(" 实验名称：控制器实验")]),t._v(" "),a("ul",[a("li",[t._v("实验学时：2学时")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"预习报告-2021-05-20"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预习报告-2021-05-20"}},[t._v("#")]),t._v(" 预习报告 2021-05-20")]),t._v(" "),a("h4",{attrs:{id:"实验原理摘要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实验原理摘要"}},[t._v("#")]),t._v(" 实验原理摘要")]),t._v(" "),a("p",[t._v("微程序控制的实质是用程序设计的思想方法耒组织微操作控制逻辑，用规整的存储逻辑代替繁杂的组合逻辑。把各条指令的微操作序列以二进制编码字的形式设计成微程序，存放在控制存储器中，通过读取并执行相应的微程序实现一条指令的功能。这就是微程序控制的基本概念。")]),t._v(" "),a("h4",{attrs:{id:"实验仪器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实验仪器"}},[t._v("#")]),t._v(" 实验仪器")]),t._v(" "),a("ul",[a("li",[t._v("PC机")]),t._v(" "),a("li",[t._v("CMStudio")]),t._v(" "),a("li",[t._v("Dais-CMX08+ 实验箱")])]),t._v(" "),a("h4",{attrs:{id:"实验内容及步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实验内容及步骤"}},[t._v("#")]),t._v(" 实验内容及步骤")]),t._v(" "),a("ul",[a("li",[t._v("实验内容\n"),a("ul",[a("li",[t._v("微控制器的格式及控位定义渉及机器指令的设计，我们结合模型机运用实践加予阐述与论正。")]),t._v(" "),a("li",[t._v("这里围绕微控制器的顺序控制，以“取指”微操作所形成的微入口作为切入点，用手控方法模似微控制器的顺序控制过程，验证微控制器的基本工作原理。")])])]),t._v(" "),a("li",[t._v("实验步骤\n"),a("ol",[a("li",[t._v("连接")]),t._v(" "),a("li",[t._v("从集成环境界面下设置实验箱工作方式")]),t._v(" "),a("li",[t._v("设置初始状态")]),t._v(" "),a("li",[t._v("按照任务进行RAM及ROM读写实验")])])])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"实验报告-2021-05-21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实验报告-2021-05-21"}},[t._v("#")]),t._v(" 实验报告 2021-05-21")]),t._v(" "),a("h4",{attrs:{id:"实验目的及要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实验目的及要求"}},[t._v("#")]),t._v(" 实验目的及要求")]),t._v(" "),a("ol",[a("li",[t._v("观察位地址的形成与变化")]),t._v(" "),a("li",[t._v("熟悉微控制器的的控制原理。")]),t._v(" "),a("li",[t._v("掌握微控制器的实现方法。")])]),t._v(" "),a("ul",[a("li",[t._v("通过控制器实验，理解计算机内部工作过程，建立计算机整机工作概念。")])]),t._v(" "),a("h4",{attrs:{id:"实验环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实验环境"}},[t._v("#")]),t._v(" 实验环境")]),t._v(" "),a("ul",[a("li",[t._v("PC机")]),t._v(" "),a("li",[t._v("CMStudio")]),t._v(" "),a("li",[t._v("Dais-CMX08+ 实验箱")])]),t._v(" "),a("h4",{attrs:{id:"实验内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实验内容"}},[t._v("#")]),t._v(" 实验内容")]),t._v(" "),a("ol",[a("li",[t._v("指令微地址的形成实验")]),t._v(" "),a("li",[t._v("后续微地址的形成实验\n"),a("ul",[a("li",[t._v("增量计数实践")]),t._v(" "),a("li",[t._v("绝对变址实践")]),t._v(" "),a("li",[t._v("条件变址实践")]),t._v(" "),a("li",[t._v("中断变址实践")])])])]),t._v(" "),a("h4",{attrs:{id:"实验步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实验步骤"}},[t._v("#")]),t._v(" 实验步骤")]),t._v(" "),a("ol",[a("li",[t._v("指令微地址的形成实验\n"),a("ul",[a("li",[t._v("①K23~K0置“0”，按【返回】键迫使PC=0，向程序段依次写入00h、80h、0C0h、0FFh。")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Nightliuguoxing/Pic@main/image/jz/1621932305341-JZOP401.jpg",alt:""}})]),t._v(" "),a("li",[t._v("②机器指令写入成功后，令K23~K0为“0”，灭M23~M0控位显示灯，然后令IP、IR=11，点亮M22、M2控位显示灯，按【单拍】按钮执行取指微操作，把指令码00h打入ID指令译码器，PC自动转入机器指令“00h”的微入口地址600h，ID按下流程完成取指微操作。")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Nightliuguoxing/Pic@main/image/jz/1621932309133-JZOP402.jpg",alt:""}})]),t._v(" "),a("li",[t._v("③保持当前“取指”状态，每按一次【单拍】按钮，PC依次变址为700h、780h、7FEh……随机，当PC≥004h后，每按一次【单拍】按钮，PC随机散转。")])])]),t._v(" "),a("li",[t._v("后续微地址的形成实验\n"),a("ul",[a("li",[t._v("⑴增量计数实践: 默认当前PC，K23~K0置“0”，在M23~M0控制灯全灭的状态下，令I (K4)=1，按【单拍】按钮，PC执行现行微地址的增1计数操作。")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Nightliuguoxing/Pic@main/image/jz/1621932314672-JZOP403.jpg",alt:""}})]),t._v(" "),a("li",[t._v("⑵绝对变址实践: 微程序控制器支持设计者在微程序控制器的004~7FFh范围内任意选择与指定后续微地址。")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Nightliuguoxing/Pic@main/image/jz/1621932320789-JZOP404.jpg",alt:""}})]),t._v(" "),a("li",[t._v("⑶条件变址实践: 条件变址的后续微地址由非因变分量和因变分量两部分组成，非因变分量是由设计者直接指定，对应下址段ud10~ud1。因变分量以当前运算标志为条件产生，对应下址段ud0。\n"),a("ul",[a("li",[t._v("①进位变址实验: 我们以准双向I/O部件S10~S0模拟非因变分量部分的微地址，因变分量部分通过进位标志的置位清零操作产生，形成以进位标志为条件的后续微地址。K23~K0置“0”，灭M23~M0控位显示灯，按【返回】键后照下流程操作。")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Nightliuguoxing/Pic@main/image/jz/1621932329486-JZOP405.jpg",alt:""}})]),t._v(" "),a("li",[t._v("②零标志变址实验: 我们仍以准双向I/O部件S10~S0模拟非因变分量部分的微地址，因变分量部分通过运算操作动态产生零标志，形成以零标志为条件的后续微地址。首先按【返回】键，清零运算寄存器AX、BX，令X2~X0=000，然后按下流程操作。")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Nightliuguoxing/Pic@main/image/jz/1621932335876-JZOP406.jpg",alt:""}})])])]),t._v(" "),a("li",[t._v("⑷中断变址实践:\n"),a("ul",[a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Nightliuguoxing/Pic@main/image/jz/1621932340787-JZOP407.jpg",alt:""}})])])])])])]),t._v(" "),a("h4",{attrs:{id:"实验结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实验结果"}},[t._v("#")]),t._v(" 实验结果")]),t._v(" "),a("h4",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")])])}),[],!1,null,null,null);i.default=_.exports}}]);