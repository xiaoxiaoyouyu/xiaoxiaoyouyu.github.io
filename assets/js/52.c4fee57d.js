(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{353:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"第七章-图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第七章-图"}},[t._v("#")]),t._v(" 第七章 图")]),t._v(" "),s("h3",{attrs:{id:"什么是图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是图"}},[t._v("#")]),t._v(" 什么是图")]),t._v(" "),s("h4",{attrs:{id:"图的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图的定义"}},[t._v("#")]),t._v(" 图的定义")]),t._v(" "),s("p",[t._v("图中的数据元素通常称为顶点，所有顶点构成顶点集，我们通常用V(Vetex)来表示。"),s("br"),t._v("\n元素间的关系用边来表示，通常用E(edge)来表示边集合。")]),t._v(" "),s("p",[t._v("根据图中的边是否有方向，图可分为：")]),t._v(" "),s("ul",[s("li",[t._v("无向图")]),t._v(" "),s("li",[t._v("有向图\n带权图-网")])]),t._v(" "),s("p",[t._v("完全图: 有n个顶点,n(n-1)/2条边的无向图。\n有向完全图: 有n个顶点，n(n-1)条边的有向图。")]),t._v(" "),s("h4",{attrs:{id:"图的基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图的基本概念"}},[t._v("#")]),t._v(" 图的基本概念")]),t._v(" "),s("p",[t._v("顶点间的关系：")]),t._v(" "),s("ul",[s("li",[t._v("邻接")]),t._v(" "),s("li",[t._v("邻接点：若图中两个顶点之间存在边或弧，则称两个顶点互为邻接点。")]),t._v(" "),s("li",[t._v("度：一个顶点的邻接点的个数。")])]),t._v(" "),s("p",[t._v("入度：指以该顶点为弧头的弧的数目。"),s("br"),t._v("\n出度：指以该顶点为弧尾的弧的数目。")]),t._v(" "),s("p",[t._v("路径：无向图G中，从顶点vi到顶点vj的路径是一个顶点序列，起点为vi，终点为vj，可表示为一个这样的序列(vi,vi0,vi1,……,vim,vj)，其中任意两个相邻的顶点间必须存在邻接关系。如果图G是有向图，则路径也是有向的。"),s("br"),t._v("\n路径长度：该路径上边或弧的条数。")]),t._v(" "),s("h3",{attrs:{id:"图的存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图的存储"}},[t._v("#")]),t._v(" 图的存储")]),t._v(" "),s("h4",{attrs:{id:"顺序存储-邻接矩阵"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顺序存储-邻接矩阵"}},[t._v("#")]),t._v(" 顺序存储 - 邻接矩阵")]),t._v(" "),s("h4",{attrs:{id:"链式存储-邻接表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链式存储-邻接表"}},[t._v("#")]),t._v(" 链式存储 - 邻接表")]),t._v(" "),s("p",[t._v("若有向图有n个顶点，e条边，则它的邻接表需要n个头结点，e个表结点")]),t._v(" "),s("h4",{attrs:{id:"对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对比"}},[t._v("#")]),t._v(" 对比")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("存储结构")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("存储方法")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("操作特性")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("邻接矩阵")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("一维数组（顶点）二维数组（邻接关系）")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1.易于判定顶点是否邻接、查询某顶点的邻接点    2.插入、删除顶点复杂O(")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("邻接表")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("头结点（顶点）表结点（邻接关系）")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1.易于：查询某顶点的邻接点；边或弧的插入、删除   2.判定顶点是否邻接：比邻接矩阵低效")])])])]),t._v(" "),s("h3",{attrs:{id:"图的遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图的遍历"}},[t._v("#")]),t._v(" 图的遍历")]),t._v(" "),s("h4",{attrs:{id:"dfs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dfs"}},[t._v("#")]),t._v(" DFS")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("Status "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("DFS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Graph G"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从第v个顶点出发，DFS遍历图")]),t._v("\n    Visited"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Traverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("FirstAdjVex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("G"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NextAdjVex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("G"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对v尚未访问的邻接顶点w递归调用DFS")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("visited"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("DFS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("G"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"bfs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bfs"}},[t._v("#")]),t._v(" BFS")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("Status "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("BFS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Graph G"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("visited"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("EnQueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("EmptyQueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            visited"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("u"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Traverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("DeQueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" u"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("FirstAdjVex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("G"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" u"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" u "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NextAdjVex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("G"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" u"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("visited"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("EnQueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"最小生成树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最小生成树"}},[t._v("#")]),t._v(" 最小生成树")]),t._v(" "),s("ul",[s("li",[t._v("Prim")]),t._v(" "),s("li",[t._v("Kruskal")])]),t._v(" "),s("h4",{attrs:{id:"拓扑排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拓扑排序"}},[t._v("#")]),t._v(" 拓扑排序")]),t._v(" "),s("h4",{attrs:{id:"最短路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最短路径"}},[t._v("#")]),t._v(" 最短路径")]),t._v(" "),s("ul",[s("li",[t._v("Dijsktra")]),t._v(" "),s("li",[t._v("Floyd")])])])}),[],!1,null,null,null);a.default=e.exports}}]);