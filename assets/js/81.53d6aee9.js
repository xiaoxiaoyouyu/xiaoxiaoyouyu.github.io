(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{382:function(_,v,t){"use strict";t.r(v);var l=t(0),i=Object(l.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"第一章-操作系统引论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第一章-操作系统引论"}},[_._v("#")]),_._v(" 第一章 操作系统引论")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("【目的要求】")]),_._v(" "),t("ol",[t("li",[_._v("[了解]OS的引入和发展;")]),_._v(" "),t("li",[_._v("[理解]多道程序设计技术;")]),_._v(" "),t("li",[_._v("[掌握]操作系统的功能和特征、操作系统的分类;")]),_._v(" "),t("li",[_._v("[了解]操作系统的结构设计.")])])]),_._v(" "),t("li",[t("p",[_._v("【重点与难点】")]),_._v(" "),t("ol",[t("li",[_._v("操作系统的功能和特征;")]),_._v(" "),t("li",[_._v("操作系统的分类.")])])])]),_._v(" "),t("hr"),_._v(" "),t("h2",{attrs:{id:"_1-1-操作系统的目标和作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-操作系统的目标和作用"}},[_._v("#")]),_._v(" 1.1 操作系统的目标和作用")]),_._v(" "),t("h4",{attrs:{id:"_1-1-1-操作系统的目标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-操作系统的目标"}},[_._v("#")]),_._v(" 1.1.1 操作系统的目标")]),_._v(" "),t("ul",[t("li",[_._v("特点:\n"),t("ul",[t("li",[_._v("方便性")]),_._v(" "),t("li",[_._v("有效性")]),_._v(" "),t("li",[_._v("可扩充性")]),_._v(" "),t("li",[_._v("开放性")])])])]),_._v(" "),t("h4",{attrs:{id:"_1-1-2-操作系统的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-操作系统的作用"}},[_._v("#")]),_._v(" 1.1.2 操作系统的作用")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("OS作为用户与计算机硬件系统之间的接口"),t("br"),_._v(" "),t("code",[_._v("OS是一个系统软件, 因而这种接口是软件接口.")])]),_._v(" "),t("ul",[t("li",[_._v("用户通过三种方式使用计算机\n"),t("ul",[t("li",[_._v("命令方式")]),_._v(" "),t("li",[_._v("系统调用方式")]),_._v(" "),t("li",[_._v("图形、窗口方式")])])])])]),_._v(" "),t("li",[t("p",[_._v("OS作为计算机系统资源的管理者")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("资源分为四类")]),_._v(" "),t("ul",[t("li",[_._v("处理器")]),_._v(" "),t("li",[_._v("存储器")]),_._v(" "),t("li",[_._v("I/O设备")]),_._v(" "),t("li",[_._v("信息(数据和程序)")])])]),_._v(" "),t("li",[t("p",[_._v("OS的主要功能是对这四类资源进行管理")]),_._v(" "),t("ul",[t("li",[_._v("处理机管理，用于分配和控制处理机;")]),_._v(" "),t("li",[_._v("存储器管理，主要负责内存的分配与回收;")]),_._v(" "),t("li",[_._v("I/O设备管理，负责I/O设备的分配与操纵;")]),_._v(" "),t("li",[_._v("文件管理，负责文件的存取、共享和保护.")])])])])]),_._v(" "),t("li",[t("p",[_._v("OS实现了对计算机资源的抽象")])])]),_._v(" "),t("h4",{attrs:{id:"_1-1-3-推动操作系统发展的主要动力"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-推动操作系统发展的主要动力"}},[_._v("#")]),_._v(" 1.1.3 推动操作系统发展的主要动力")]),_._v(" "),t("ol",[t("li",[_._v("不断提高计算机资源利用率")]),_._v(" "),t("li",[_._v("方便用户")]),_._v(" "),t("li",[_._v("器件的不断更新换代：主要元件(四代)、字长、内存、外设(外存、光盘、扫描仪等)")]),_._v(" "),t("li",[_._v("计算机体系结构的不断发展：单处理机、多处理机、网络")]),_._v(" "),t("li",[_._v("不断提出新的应用需求：如实时OS、多媒体功能、嵌入式OS等。")])]),_._v(" "),t("h2",{attrs:{id:"_1-2-操作系统的发展过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-操作系统的发展过程"}},[_._v("#")]),_._v(" 1.2 操作系统的发展过程")]),_._v(" "),t("h4",{attrs:{id:"_1-2-1-未配置操作系统的计算机系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-未配置操作系统的计算机系统"}},[_._v("#")]),_._v(" 1.2.1 未配置操作系统的计算机系统")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("人工操作方式")]),_._v(" "),t("ul",[t("li",[_._v("[缺点]:\n"),t("ul",[t("li",[_._v("用户独占全机")]),_._v(" "),t("li",[_._v("CPU等待人工操作")])])])]),_._v(" "),t("p",[_._v("人工操作方式严重降低了计算机资源的利用率，此即所谓的人机矛盾。CPU的速度在迅速提高，而I/O设备的速度却提高很慢，使得CPU与I/O设备之间速度不匹配的矛盾更加突出。")])]),_._v(" "),t("li",[t("p",[_._v("脱机输入/输出(Off-Line I/O)方式")]),_._v(" "),t("ul",[t("li",[_._v("[优点]\n"),t("ul",[t("li",[_._v("减少了CPU的空闲时间")]),_._v(" "),t("li",[_._v("提高了I/O速度")])])])])])]),_._v(" "),t("p",[_._v("在脱机I/O技术的基础上产生了单道批处理系统。")]),_._v(" "),t("h4",{attrs:{id:"_1-2-2-单道批处理系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-单道批处理系统"}},[_._v("#")]),_._v(" 1.2.2 单道批处理系统")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("单道批处理系统(Simple Batch Processing System)的处理过程"),t("br"),_._v(" "),t("code",[_._v("作业")]),_._v("：指用户程序及其所需要的数据和命令的集合"),t("br"),_._v(" "),t("code",[_._v("单道")]),_._v("：内存中始终只保持一道作业"),t("br"),_._v("\n人们习惯上把按照这种形式顺序输入、执行的一批作业称为"),t("code",[_._v("作业流")])])]),_._v(" "),t("li",[t("p",[_._v("单道批处理系统的特征")]),_._v(" "),t("ul",[t("li",[_._v("[特征]\n"),t("ul",[t("li",[_._v("自动性：无需用户干预")]),_._v(" "),t("li",[_._v("顺序性 ：一般情况下，先进入内存的作业先完成")]),_._v(" "),t("li",[_._v("单道性：造成内存、CPU、I/O等资源浪费 [缺点]")])])])])])]),_._v(" "),t("h4",{attrs:{id:"_1-2-3-多道批处理系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-多道批处理系统"}},[_._v("#")]),_._v(" 1.2.3 多道批处理系统")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("多道程序设计的基本概念")])]),_._v(" "),t("li",[t("p",[_._v("两个概念")]),_._v(" "),t("ul",[t("li",[_._v("多道程序设计: 指同时把几个作业放入内存,并允许它们交替执行,共享系统资源")]),_._v(" "),t("li",[_._v("多道程序系统: 允许多个程序执行的操作系统")])])]),_._v(" "),t("li",[t("p",[_._v("[优点]")]),_._v(" "),t("ul",[t("li",[_._v("提高CPU的利用率")]),_._v(" "),t("li",[_._v("可提高内存和I/O设备利用率")]),_._v(" "),t("li",[_._v("增加系统吞吐量: "),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Nightliuguoxing/Pic@main/image/os/1619512129438-OS1233.jpg",alt:"单道和多道程序运行情况"}})])])]),_._v(" "),t("li",[t("p",[_._v("[特征]")]),_._v(" "),t("ul",[t("li",[_._v("多道性")]),_._v(" "),t("li",[_._v("无序性")]),_._v(" "),t("li",[_._v("调度性: 两级调度")])])]),_._v(" "),t("li",[t("p",[_._v("[缺点]")]),_._v(" "),t("ul",[t("li",[_._v("平均周转时间长")]),_._v(" "),t("li",[_._v("无交互能力")]),_._v(" "),t("li",[t("code",[_._v("周转时间")]),_._v("：是指从作业提交给系统开始,到作业完成为止的这段时间间隔.")])])]),_._v(" "),t("li",[t("p",[_._v("多道批处理系统需要解决的问题")]),_._v(" "),t("ul",[t("li",[_._v("处理机管理问题")]),_._v(" "),t("li",[_._v("内存管理问题")]),_._v(" "),t("li",[_._v("I/O设备管理问题")]),_._v(" "),t("li",[_._v("文件管理问题")]),_._v(" "),t("li",[_._v("作业管理问题")]),_._v(" "),t("li",[_._v("用户与系统的接口问题")])])])]),_._v(" "),t("p",[t("code",[_._v("操作系统定义")]),_._v(": 操作系统是一组控制和管理计算机硬件和软件资源，合理地对各类作业进行调度，以及方便用户使用的程序的集合")]),_._v(" "),t("h4",{attrs:{id:"_1-2-4-分时系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-4-分时系统"}},[_._v("#")]),_._v(" 1.2.4 分时系统")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("分时系统(Time-Sharing System)的产生:")]),_._v(" "),t("ul",[t("li",[_._v("人-机交互")]),_._v(" "),t("li",[_._v("共享主机")])]),_._v(" "),t("p",[t("code",[_._v("分时系统的定义")]),_._v(": 在一台主机上连接了多个配有显示器和键盘的终端并由此所组成的系统，该系统允许多个用户同时通过自己的终端，以交互方式使用计算机，共享主机中的资源")])]),_._v(" "),t("li",[t("p",[_._v("分时系统实现中的关键问题")]),_._v(" "),t("ul",[t("li",[_._v("及时接收：配置多路卡和缓冲区。")]),_._v(" "),t("li",[_._v("及时处理：作业直接进入内存；使用时间片轮转算法。")])])]),_._v(" "),t("li",[t("p",[_._v("分时系统的特征")]),_._v(" "),t("ul",[t("li",[_._v("多路性")]),_._v(" "),t("li",[_._v("独立性")]),_._v(" "),t("li",[_._v("及时性")]),_._v(" "),t("li",[_._v("交互性")])])])]),_._v(" "),t("h4",{attrs:{id:"_1-2-5-实时系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-5-实时系统"}},[_._v("#")]),_._v(" 1.2.5 实时系统")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("实时系统的类型")]),_._v(" "),t("ul",[t("li",[_._v("工业(武器)控制系统 如：炼钢、化工生产的过程控制，火炮自动控制、飞机自动驾驶、导弹制导等")]),_._v(" "),t("li",[_._v("信息查询系统 如：飞机或火车订票系统")]),_._v(" "),t("li",[_._v("多媒体系统")]),_._v(" "),t("li",[_._v("嵌入式系统")])])]),_._v(" "),t("li",[t("p",[_._v("实时任务的类型")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("按任务执行时是否呈现周期性来划分")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("周期性实时任务。")])]),_._v(" "),t("li",[t("p",[_._v("非周期性实时任务。")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("开始截止时间——任务在某时间以前必须开始执行；")])])]),_._v(" "),t("li",[t("p",[t("code",[_._v("完成截止时间——任务在某时间以前必须完成。")])])])])]),_._v(" "),t("li",[t("p",[_._v("根据对截止时间的要求来划分")]),_._v(" "),t("ul",[t("li",[_._v("硬实时任务(hard real-time task)。系统必须满足任务对截止时间的要求，否则可能出现难以预测的结果。")]),_._v(" "),t("li",[_._v("软实时任务(Soft real-time task)。它也联系着一个截止时间，但并不严格，若偶尔错过了任务的截止时间， 对系统产生的影响也不会太大。")])])])])]),_._v(" "),t("li",[t("p",[_._v("实时系统与分时系统特征的比较")]),_._v(" "),t("ul",[t("li",[_._v("多路性。分时服务；多路采集")]),_._v(" "),t("li",[_._v("独立性。 查询交互；采集和控制")]),_._v(" "),t("li",[_._v("及时性。 人；控制对象")]),_._v(" "),t("li",[_._v("交互性。")]),_._v(" "),t("li",[_._v("可靠性。实时系统往往采取多级容错技术")])])])]),_._v(" "),t("h4",{attrs:{id:"_1-2-6-微机操作系统的发展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-6-微机操作系统的发展"}},[_._v("#")]),_._v(" 1.2.6 微机操作系统的发展")]),_._v(" "),t("ul",[t("li",[_._v("单用户单任务操作系统: CP/M和MS-DOS")]),_._v(" "),t("li",[_._v("单用户多任务操作系统: Windows")]),_._v(" "),t("li",[_._v("多用户多任务操作系统: Unix OS")])]),_._v(" "),t("h2",{attrs:{id:"作业"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作业"}},[_._v("#")]),_._v(" 作业")]),_._v(" "),t("h4",{attrs:{id:"例题一"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例题一"}},[_._v("#")]),_._v(" 例题一")]),_._v(" "),t("hr"),_._v(" "),t("p",[_._v("设内存中有三道程序A、B、C，它们按A、B、C的优先次序执行（可抢占）。它们的计算和I/O操作的时间如下表所示（单位：ms）")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[_._v("操作 \\ 程序")]),_._v(" "),t("th",{staticStyle:{"text-align":"center"}},[_._v("A")]),_._v(" "),t("th",{staticStyle:{"text-align":"center"}},[_._v("B")]),_._v(" "),t("th",{staticStyle:{"text-align":"center"}},[_._v("C")])])]),_._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[_._v("计算")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("30")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("60")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("20")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[_._v("I/O操作")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("40")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("30")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("40")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[_._v("计算")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("10")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("10")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("20")])])])]),_._v(" "),t("p",[_._v("假设三道程序使用相同设备进行I/O操作，即程序以串行方式使用设备，试画出单道运行和多道运行的时间关系图（调度程序的执行时间忽略不计）。在两种情况下，完成这三道程序要花多少时间?")]),_._v(" "),t("hr"),_._v(" "),t("h4",{attrs:{id:"例题二"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例题二"}},[_._v("#")]),_._v(" 例题二")]),_._v(" "),t("hr"),_._v(" "),t("p",[_._v("一个多道批处理系统中仅有P1和P2两个作业，P2比P1晚5ms到达，它的计算和I/O操作顺序如下（单位：ms）：")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[_._v("操作 \\ 程序")]),_._v(" "),t("th",{staticStyle:{"text-align":"center"}},[_._v("P1")]),_._v(" "),t("th",{staticStyle:{"text-align":"center"}},[_._v("P2")])])]),_._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[_._v("计算")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("60")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("120")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[_._v("I/O操作")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("80")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("40")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[_._v("计算")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("20")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("40")])])])]),_._v(" "),t("p",[_._v("若不考虑调度和切换时间，则完成两个作业需要的时间最少是：")]),_._v(" "),t("p",[_._v("A.240 ms\t\nB.260 ms\t\nC.340 ms\t\nD.360 ms")]),_._v(" "),t("hr"),_._v(" "),t("h2",{attrs:{id:"_1-3-操作系统的基本特征"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-操作系统的基本特征"}},[_._v("#")]),_._v(" 1.3 操作系统的基本特征")]),_._v(" "),t("h4",{attrs:{id:"_1-3-1-并发性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-并发性"}},[_._v("#")]),_._v(" 1.3.1 并发性")]),_._v(" "),t("p",[t("code",[_._v("并行性")]),_._v(": 指两个或多个事件在"),t("code",[_._v("同一时刻")]),_._v("发生\n"),t("code",[_._v("并发性")]),_._v(": 指两个或多个事件在"),t("code",[_._v("同一时间")]),_._v(" "),t("code",[_._v("间隔")]),_._v("内发生")]),_._v(" "),t("h4",{attrs:{id:"_1-3-2-共享性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-共享性"}},[_._v("#")]),_._v(" 1.3.2 共享性")]),_._v(" "),t("p",[_._v("在操作系统环境下，所谓共享是指系统中的资源可供内存中多个并发执行的进程(线程)共同使用。由于资源属性的不同，进程对资源共享的方式也不同，目前主要有以下两种资源共享方式:")]),_._v(" "),t("ul",[t("li",[_._v("互斥共享方式: 我们把这种资源共享方式称为互斥式共享，而把在一段时间内只允许一个进程访问的资源称为临界资源或独占资源")]),_._v(" "),t("li",[_._v("同时访问方式")])]),_._v(" "),t("p",[t("code",[_._v("并发")]),_._v("和"),t("code",[_._v("共享")]),_._v("是操作系统的两个"),t("code",[_._v("最基本")]),_._v("的特征，它们又是"),t("code",[_._v("互为存在")]),_._v("的"),t("code",[_._v("条件")])]),_._v(" "),t("ul",[t("li",[_._v("资源共享是以程序（进程）的并发执行为条件的，若系统不允许程序并发执行，自然不存在资源共享问题")]),_._v(" "),t("li",[_._v("若系统不能对资源共享实施有效管理，协调好诸进程对共享资源的访问，也必然影响到程序并发执行的程度，甚至根本无法并发执行")])]),_._v(" "),t("h4",{attrs:{id:"_1-3-3-虚拟性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-虚拟性"}},[_._v("#")]),_._v(" 1.3.3 虚拟性")]),_._v(" "),t("p",[_._v('操作系统中的所谓"虚拟": '),t("code",[_._v("通过某种技术把一个物理实体变为若干个逻辑上的对应物")])]),_._v(" "),t("ul",[t("li",[_._v("时分复用技术（即分时使用方式）\n"),t("ul",[t("li",[_._v("虚拟处理机技术")]),_._v(" "),t("li",[_._v("虚拟设备技术")])])]),_._v(" "),t("li",[_._v("空分复用技术\n"),t("ul",[t("li",[_._v("虚拟磁盘技术：分卷")]),_._v(" "),t("li",[_._v("虚拟存储器技术：请求调入和置换")])])])]),_._v(" "),t("h4",{attrs:{id:"_1-3-4-异步性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4-异步性"}},[_._v("#")]),_._v(" 1.3.4 异步性")]),_._v(" "),t("h2",{attrs:{id:"_1-4-操作系统的主要功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-操作系统的主要功能"}},[_._v("#")]),_._v(" 1.4 操作系统的主要功能")]),_._v(" "),t("h4",{attrs:{id:"_1-4-1-处理机管理功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-处理机管理功能"}},[_._v("#")]),_._v(" 1.4.1 处理机管理功能")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("进程控制: 主要功能如下")]),_._v(" "),t("ul",[t("li",[_._v("作业创建进程、撤消已结束的进程")]),_._v(" "),t("li",[_._v("控制进程在运行过程中的状态转换")])])]),_._v(" "),t("li",[t("p",[_._v("进程同步")]),_._v(" "),t("ul",[t("li",[_._v("进程互斥方式，这是指诸进程（线程）在对临界资源进行访问时，应采用互斥方式；")]),_._v(" "),t("li",[_._v("进程同步方式，指在相互合作去完成共同任务的诸进程(线程)间，由同步机构对它们的执行次序加以协调")])])]),_._v(" "),t("li",[t("p",[_._v("进程通信: 通常在它们之间是采用"),t("code",[_._v("直接通信")]),_._v("方式")])]),_._v(" "),t("li",[t("p",[_._v("调度: 在传统的操作系统中，包括"),t("code",[_._v("作业调度")]),_._v("和"),t("code",[_._v("进程调度")]),_._v("两步")])])]),_._v(" "),t("h4",{attrs:{id:"_1-4-2-存储器管理功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-存储器管理功能"}},[_._v("#")]),_._v(" 1.4.2 存储器管理功能")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("内存分配: 采取"),t("code",[_._v("静态")]),_._v("和"),t("code",[_._v("动态")]),_._v("两种方式")]),_._v(" "),t("ul",[t("li",[_._v("为了实现内存分配，在内存分配的机制中应具有这样的结构和功能：\n"),t("ul",[t("li",[_._v("内存分配数据结构，该结构用于记录内存空间的使用情况，作为内存分配的依据；")]),_._v(" "),t("li",[_._v("内存分配功能，系统按照一定的内存分配算法， 为用户程序分配内存空间；")]),_._v(" "),t("li",[_._v("内存回收功能，系统对于用户不再需要的内存，通过用户的释放请求，去完成系统的回收功能。")])])])])]),_._v(" "),t("li",[t("p",[_._v("内存保护")])]),_._v(" "),t("li",[t("p",[_._v("地址映射")])]),_._v(" "),t("li",[t("p",[_._v("内存扩充")])])]),_._v(" "),t("h4",{attrs:{id:"_1-4-3-设备管理功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-3-设备管理功能"}},[_._v("#")]),_._v(" 1.4.3 设备管理功能")]),_._v(" "),t("ol",[t("li",[_._v("缓冲管理")]),_._v(" "),t("li",[_._v("设备分配")]),_._v(" "),t("li",[_._v("设备处理: 设备处理程序又称为设备驱动程序")])]),_._v(" "),t("h4",{attrs:{id:"_1-4-4-文件管理功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-4-文件管理功能"}},[_._v("#")]),_._v(" 1.4.4 文件管理功能")]),_._v(" "),t("ol",[t("li",[_._v("文件存储空间的管理")]),_._v(" "),t("li",[_._v("目录管理")]),_._v(" "),t("li",[_._v("文件的读/写管理和保护\n"),t("ul",[t("li",[_._v("文件的读/写管理")]),_._v(" "),t("li",[_._v("文件保护\n"),t("ul",[t("li",[_._v("防止未经核准的用户存取文件；")]),_._v(" "),t("li",[_._v("防止冒名顶替存取文件；")]),_._v(" "),t("li",[_._v("防止以不正确的方式使用文件。")])])])])])]),_._v(" "),t("h4",{attrs:{id:"_1-4-5-操作系统与用户之间的接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-5-操作系统与用户之间的接口"}},[_._v("#")]),_._v(" 1.4.5  操作系统与用户之间的接口")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("用户接口")]),_._v(" "),t("ul",[t("li",[_._v("联机用户接口: 它由一组键盘操作"),t("code",[_._v("命令及命令解释程序")]),_._v("所组成")]),_._v(" "),t("li",[_._v("脱机用户接口: 该接口是为批处理作业的用户提供的，故也称为"),t("code",[_._v("批处理用户接口")]),_._v(";该接口由一组作业控制语言JCL组成")]),_._v(" "),t("li",[_._v("图形用户接口")])])]),_._v(" "),t("li",[t("p",[_._v("程序接口: 该接口是为用户程序在执行中访问系统资源而设置的，"),t("code",[_._v("是用户程序取得操作系统服务的惟一途径")]),_._v(";它是由一组系统调用组成，每一个系统调用都是一个能完成特定功能的子程序，每当应用程序要求OS提供某种服务(功能)时，便调用具有相应功能的"),t("code",[_._v("系统调用")])])])]),_._v(" "),t("h4",{attrs:{id:"_1-4-6-现代操作系统的新功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-6-现代操作系统的新功能"}},[_._v("#")]),_._v(" 1.4.6 现代操作系统的新功能")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("系统安全")]),_._v(" "),t("ul",[t("li",[_._v("认证技术。这是一个用来确认被认证的对象是否名副其实的过程，以确定对象的真实性，防止入侵者进行假冒和篡改等。")]),_._v(" "),t("li",[_._v("密码技术。即对系统中所需存储和传输的数据进行加密，攻击者即使截获到数据，也无法理解数据的内容。")]),_._v(" "),t("li",[_._v("访问控制技术: 两种途径\n"),t("ul",[t("li",[_._v("通过对用户存取权限的设置，限定用户只能访问被允许访问的资源，这样也就限定了用户对系统资源的访问范围")]),_._v(" "),t("li",[_._v("通过对文件属性的设置来保障指定文件的安全性，如设置文件属性为只读时，该文件就只能被读而不能被修改")])])]),_._v(" "),t("li",[_._v("反病毒技术。安装反病毒软件，定期查杀病毒。")])])]),_._v(" "),t("li",[t("p",[_._v("网络的功能和服务")]),_._v(" "),t("ul",[t("li",[_._v("网络通信")]),_._v(" "),t("li",[_._v("资源管理")]),_._v(" "),t("li",[_._v("应用互操作")])])]),_._v(" "),t("li",[t("p",[_._v("支持多媒体")]),_._v(" "),t("ul",[t("li",[_._v("网络通信")]),_._v(" "),t("li",[_._v("资源管理")]),_._v(" "),t("li",[_._v("应用互操作")])])])]),_._v(" "),t("h2",{attrs:{id:"_1-5-os结构设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-os结构设计"}},[_._v("#")]),_._v(" 1.5 OS结构设计")]),_._v(" "),t("h4",{attrs:{id:"_1-5-1-传统的操作系统结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-传统的操作系统结构"}},[_._v("#")]),_._v(" 1.5.1 传统的操作系统结构")]),_._v(" "),t("ol",[t("li",[_._v("无结构操作系统")]),_._v(" "),t("li",[_._v("模块化结构OS\n"),t("ul",[t("li",[_._v("模块化程序设计技术的基本概念\n"),t("ul",[t("li",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Nightliuguoxing/Pic@main/image/os/1619512463297-OS1512.jpg",alt:"模块化操作系统结构"}})])])]),_._v(" "),t("li",[_._v("模块独立性\n"),t("ul",[t("li",[_._v("内聚性")]),_._v(" "),t("li",[_._v("耦合度")]),_._v(" "),t("li",[_._v("模块化接口法的优缺点\n"),t("ul",[t("li",[_._v("提高了OS设计的正确性、可理解性和可维护性")]),_._v(" "),t("li",[_._v("增强了OS的可适应性")]),_._v(" "),t("li",[_._v("加速了OS的开发过程")])])])])])])]),_._v(" "),t("li",[_._v("分层式结构OS\n"),t("ul",[t("li",[_._v("分层式结构的基本概念")]),_._v(" "),t("li",[_._v("层次的设置")])])])]),_._v(" "),t("h4",{attrs:{id:"_1-5-2-客户-服务器模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-2-客户-服务器模式"}},[_._v("#")]),_._v(" 1.5.2 客户/服务器模式")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("客户/服务器模式(Client-Server Model)的组成")]),_._v(" "),t("ul",[t("li",[_._v("客户机")]),_._v(" "),t("li",[_._v("服务器")]),_._v(" "),t("li",[_._v("网络系统")])])]),_._v(" "),t("li",[t("p",[_._v("客户/服务器之间的交互")]),_._v(" "),t("ul",[t("li",[_._v("客户发送请求消息")]),_._v(" "),t("li",[_._v("服务器接收消息")]),_._v(" "),t("li",[_._v("服务器回送消息")]),_._v(" "),t("li",[_._v("客户机接收消息")])])]),_._v(" "),t("li",[t("p",[_._v("客户/服务器模式的优点")]),_._v(" "),t("ul",[t("li",[_._v("实现数据的分布处理和存储（用客户机进行本地处理和数据的分布存储）")]),_._v(" "),t("li",[_._v("便于集中管理。重要数据和设备集中管理，提高了系统的可靠性和安全性")]),_._v(" "),t("li",[_._v("提高了系统的灵活性和可扩充性")]),_._v(" "),t("li",[_._v("易于改编应用软件（客户机程序）")])])])]),_._v(" "),t("h4",{attrs:{id:"_1-5-3-面向对象的程序设计技术-object-orientated-programming"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-3-面向对象的程序设计技术-object-orientated-programming"}},[_._v("#")]),_._v(" 1.5.3 面向对象的程序设计技术(Object-Orientated Programming)")]),_._v(" "),t("h4",{attrs:{id:"_1-5-4-微内核os结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-4-微内核os结构"}},[_._v("#")]),_._v(" 1.5.4 微内核OS结构")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("微内核操作系统的基本概念")]),_._v(" "),t("ul",[t("li",[_._v("足够小的内核")]),_._v(" "),t("li",[_._v("基于客户/服务器模式")]),_._v(" "),t("li",[_._v('应用"机制与策略分离"原理')]),_._v(" "),t("li",[_._v("采用面向对象技术")])])]),_._v(" "),t("li",[t("p",[_._v("微内核的基本功能")]),_._v(" "),t("ul",[t("li",[_._v("进程（线程）管理。")]),_._v(" "),t("li",[_._v("低级存储器管理。")]),_._v(" "),t("li",[_._v("中断和陷入处理。")])])]),_._v(" "),t("li",[t("p",[_._v("微内核操作系统的优点")]),_._v(" "),t("ul",[t("li",[_._v("提高了系统的可扩展性")]),_._v(" "),t("li",[_._v("增强了系统的可靠性")]),_._v(" "),t("li",[_._v("可移植性强")]),_._v(" "),t("li",[_._v("提供了对分布式系统的支持")]),_._v(" "),t("li",[_._v("融入了面向对象技术")])])]),_._v(" "),t("li",[t("p",[_._v("微内核操作系统存在的问题: 运行效率有所降低")])])])])}),[],!1,null,null,null);v.default=i.exports}}]);